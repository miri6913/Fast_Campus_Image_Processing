Hello

### Part 0. 이미지 분류를 위한 Pytorch의 기본
Contrast Normalization - GCN, LCN
    **Global Contrast Normalization (GCN)**
    **What**: GCN normalizes the contrast of an image **using global statistics** (mean and standard deviation across the whole image).
    **Why**: To reduce brightness differences and standardize images.
    **How**: Subtract mean and divide by std deviation.
    **Example**:
    ```python
    def global_contrast_normalization(X, scale=1.0, eps=1e-8):
        mean = X.mean()
        std = X.std()
        return scale * (X - mean) / max(std, eps)
    ```
    **Local Contrast Normalization (LCN)**
    **What**: LCN normalizes each pixel **using local neighborhood** statistics.
    **Why**: Enhances local features like edges and textures.
    **Use case**: Often used in early layers of CNNs or preprocessing.

Data Augmentation
- **What**: Techniques used to artificially increase dataset size by creating modified versions of original images.
- **Why**: Prevent overfitting, improve generalization.
- **How**: Apply transformations like crop, flip, rotation, etc.

TorchVision
- **What**: PyTorch library for computer vision with datasets, model architectures, and image transforms.
- **Where**: `torchvision.transforms` is heavily used for preprocessing and data augmentation.

transforms.RandomCrop(224)
- **What**: Randomly crops a square patch of size `224x224` from the input image.
- **Why**: Forces model to focus on different parts of the image.

transforms.RandomHorizontalFlip(), VerticalFlip
- **What**: Flips the image randomly along horizontal or vertical axis.
- **Why**: Helps model learn that orientation doesn’t always matter.

RandomRotation
- **What**: Rotates the image by a random angle.
- **Why**: Makes the model rotation-invariant.

RandomAffine
- **What**: Applies random affine transformations (rotation, translation, shear, scale).
- **Why**: More flexible than basic rotation/translation.

**Example**:

```python
transforms.RandomAffine(degrees=15, translate=(0.1, 0.1), scale=(0.9, 1.1), shear=10)
```

ColorJitter
- **What**: Randomly changes brightness, contrast, saturation, and hue.
- **Why**: Simulates different lighting conditions.

**Example**:

```python
transforms.ColorJitter(brightness=0.2, contrast=0.3, saturation=0.4, hue=0.1)
```

RandomAdjustSharpness
RandomChoice
RandomApply
AutoAugment
scheduler.step()
Pooling - 입력 영상을 down sampling 작업 (max, average pooling)
residual - qoldiq
TorchVision, timm
Dropout에서는 왜 시간이 증가하는가?
Learning rate scheduler
Optimizer
Confusion matrix
Recall이 중요한 상황도 있고 Precision도 중요한 상황이 있음


### **Part 1. 컴퓨터 비전의 핵심, 3단계로 끝내는 이미지 분류 마스터**
Data-Driven approach
Binary Cross-Entropy loss function

Style Transfer
Content Image + Style Image = Generated Image
Loss function for Neural Style Transfer
Style Matrix or Gram Matrix
DenseNet
BCEWithLogisticLoss
tqdm?
tensorboard&weight and bias dashboard

EfficientNet
Compound scaling
MBConc Blocks
imgaug Sometimes

Why we do unsqueeze while testing the model?
with in python

네트워크 최적화